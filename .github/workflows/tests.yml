name: Tests

on:
  push:
    branches: [ tests-workflow ]
  pull_request:
    branches: [ develop ]

env:
  CARGO_TERM_COLOR: always
  ENVIRONMENT: development

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        branch: [ tests-workflow ]
    runs-on: ${{ matrix.os }}

    steps:

      - name: Clone workspaces
        uses: actions/checkout@v3
        with:
          repository: prosopo/workspaces
          path: workspaces
          submodules: recursive
          ref: ${{ matrix.branch }}

      - name: Clone scripts repository
        uses: actions/checkout@v3
        with:
          repository: prosopo/scripts
          path: scripts
          ref: ${{ matrix.branch }}

      - run: mkdir -p ~/image-cache

      - id: image-cache
        uses: actions/cache@v3
        with:
          path: ~/image-cache
          key: image-cache-docker-${{ runner.os }}
          restore-keys: |
            image-cache-docker-${{ runner.os }}

      - if: steps.image-cache.outputs.cache-hit != 'true'
        run: |
          docker pull prosopo/substrate:demo-v1.0.4
          docker save -o ~/image-cache/prosopo.tar prosopo/substrate:demo-v1.0.4
          docker pull mongo:5.0.4
          docker save -o ~/image-cache/mongo.tar mongo:5.0.4

      - if: steps.image-cache.outputs.cache-hit == 'true'
        run: |
          docker load -i ~/image-cache/prosopo.tar
          docker load -i ~/image-cache/mongo.tar

      - name: Start the docker images
        run: |
          cd scripts
          docker compose --file ./docker/docker-compose.development.yml up -d

#      - uses: actions/setup-node@v3
#        with:
#          node-version: current
#          cache: npm
#          path: ~/.npm
#          key: ${{ runner.os }}-${{ hashFiles('~/workspaces/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: |
          cd workspaces
          npm run checkout ${{ matrix.branch }}
          npm install


      - name: Build provider and dependencies
        run: |
          cd workspaces
          npm run checkout ${{ matrix.branch }}
          cat package.json
          npm run build+deps provider

      - name: Setup the environment and run the unit tests
        run: |
          cd workspaces
          npm run checkout ${{ matrix.branch }}
          NODE_ENV=$ENVIRONMENT npm run setup
          cd packages/provider
          NODE_ENV=$ENVIRONMENT npm run test

